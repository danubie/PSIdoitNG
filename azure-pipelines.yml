# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

variables:
  buildFolderName: output
  buildArtifactName: output
  testResultFolderName: testResults
  defaultBranch: main
  Agent.Source.Git.ShallowFetchDepth: 0 # override ShallowFetchDepth

stages:
  - stage: Test
    jobs:
      - job: TestPSCore
        timeoutInMinutes: 5
        pool:
          vmImage: windows-latest
        steps:
          - task: PowerShell@2
            name: InstallPackage
            inputs:
              pwsh: true
              targetType: 'inline'
              script: |
                # Install-PackageProvider -Name NuGet -Force -Scope CurrentUser
                Install-Module -Name PSScriptAnalyzer,Pester,Sampler -Repository PSGallery -Force -Scope CurrentUser
                Install-Module -Name PSIdoitNG -Repository PSGallery -Force -AllowPrerelease -Scope CurrentUser
                ./build.ps1  -ResolveDependency -Tasks noop

          - task: PowerShell@2
            name: Test
            inputs:
              pwsh: true
              targetType: 'inline'
              script:  |
                $p = New-PesterConfiguration
                $p.Output.Verbosity = 'Detailed'
                $p.Filter.ExcludeTag = 'Integration'
                $p.Run.Path = './Tests/Unit'
                $PesterPreference = $p
                Invoke-Pester